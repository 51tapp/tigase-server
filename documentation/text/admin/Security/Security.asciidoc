[[security]]
= Security
:author: Daniel Wisnewski
:version: v2.0, October 2015: Reformatted for Kernel/DSL

The articles here cover advanced security features built into to Tigase Server, and some options for adding your own levels of security.

[[blockingCommand]]
== XEP-0191 Support

The simplest security feature, however, inside an XMPP server is the ability to block users and JIDS. link:http://xmpp.org/extensions/xep-0191[XEP-0191] specifies the parameters of simple blocking without using privacy lists. Below is a breakdown and some sample commands you may find helpful.
To enable this feature, be sure the following is in your init.properties file:
----
}
'sess-man' {
    'urn:xmpp:blocking' () {}
}
----
If you have other plugins running, then just add `'urn:xmpp:blocking' () {}` to the list to activate this feature.


To confirm if your installation of Tigase supports this feature, a quick disco#info of your server should reveal the following feature:
-----
<feature var='urn:xmpp:blocking'/>
-----

Blocked users are stored on the server on a per-JID basis, so one user may only see his or her blocked JIDs.  Lists of blocked JIDs will return as an IQ stanza with a list of <item> fields.  To retrieve the blocklist, the following command is issued:
[source,xml]
-----
<iq type='get' id='blockedjids'>
  <blocklist xmlns='urn:xmpp:blocking'/>
</iq>
-----
The server responds:
[source,xml]
-----
<iq type='result' id='blockedjids'>
  <blocklist xmlns='urn:xmpp:blocking'>
    <item jid='user1@domain.net'/>
    <item jid='admin@example.com'/>
  </blocklist>
</iq>
-----

To block a JID, a similar stanza to the one above is sent to the server with the items of the blocked JIDs you wish to add:
[source,xml]
-----
<iq from='admin@domain.net' type='set' id='block'>
  <block xmlns='urn:xmpp:blocking'>
    <item jid='user2@domain.net'/>
  </block>
</iq>
-----
The server will then push an unavailable presence to blocked contacts.  Communication between a contact that is blocked, and an entity that blocked it will result in a <not-acceptable> error:
[source,xml]
-----
<message type='error' from='user2@domain.net' to='admin@domain.net'>
  <body>Hello, are you online?</body>
  <error type='cancel'>
    <not-acceptable xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
    <blocked xmlns='urn:xmpp:blocking:errors'/>
  </error>
</message>
-----

Unblocking a contact is just as easy as blocking, send an unblock stanza to the server:
[source,xml]
-----
<iq from='admin@domain.net' type='set' id='unblock'>
  <unblock xmlns='urn:xmpp:blocking'>
    <item jid='user2@domain.net'/>
  </unblock>
</iq>
-----
The server will begin pushing presence information to unblocked contacts and resources so long as permissions have not changed between.

You may also opt to unblock all contacts and essentially clear out your blocked list using the following command:
[source,xml]
-----
<iq type='set' id='unblockall'>
  <unblock xmlns='urn:xmpp:blocking'/>
</iq>
-----

[[accountRegLimit]]
== Account Registration Limits

In order to protect Tigase servers from DOS attacks, a limit on number of account registrations per second has been implemented.  This may be configured by adding the following line in the config.tdsl file:
[source,dsl]
-----
'registration-throttling' () {
    limit = 10
-----
This setting allows for 10 registrations from a single IP per second.  If the limit is exceeded, a `NOT_ALLOWED` error will be returned.

It is possible to create two separate counters as well:
[source,dsl]
-----
'registration-throttling' () {
    limit = 10
}
c2s {
    'registration-throttling' (class: tigase.server.xmppclient.RegistrationThrottling) {
        limit = 3
    }
}
-----
Here we have one for c2s with a limit of 3, and a global for all other connection managers set at 10.

You can also set individual components limits as well:
[source,dsl]
-----
ws2s {
    'registration-throttling' (class: tigase.server.xmppclient.RegistrationThrottling) {
        limit = 7
    }
}
-----

[[bruteForcePrevention]]
== Brute-force attack prevention

Brute-force Prevention is designed to protect Tigase Server against user password guessing.
It counts invalid login tries and when it is above limit, it locks login ability for specific time (soft ban).
When invalid login counter reaches second level, account will be disabled permanently.

=== Configuration

Brute-force Prevention is configured by VHost.
There is following lis of configuration parameters:

|======================================
| `brute-force-lock-enabled`        | `boolean` | Brute Force Prevention Enabled
| `brute-force-lock-after-fails`    | `long`    | Number of allowed invalid login
| `brute-force-period-time`         | `long`    | Time [sec] in what failed login tries are counted
| `brute-force-disable-after-fails` | `long`    | Threshold beyond which account will be permanently disabled
| `brute-force-lock-time`           | `long`    | Time [sec] of soft ban (first threshold)
| `brute-force-mode`                | `string`  | Working mode (see <<bruteForcePrevention_WorkingModes>>)
|======================================

[[bruteForcePrevention_WorkingModes]]
==== Working modes

There are three working modes:

- `Ip` - it counts invalid login tries from IP, and locks login ability (soft ban) for IP what reach the threshold
- `IpJid` - it counts tries from IP to specific user account. Soft ban locks ability of login to specific JID from
specific IP.
- `Jid`- similar to `IpJid` but checks only JID. Soft ban locks ability of login to specific JID from all IPs.

NOTE: Only in modes `Jid` and `IpJid` account may be permanently disabled.

==== Permanent ban

In modes `Jid` and `IpJid`, when invalid login counter reach threshold `brute-force-disable-after-fails`, account
status will be set o `disabled`.
To enable it again you should use https://xmpp.org/extensions/xep-0133.html#reenable-users[Re-Enable User] Ad-hoc
Command.