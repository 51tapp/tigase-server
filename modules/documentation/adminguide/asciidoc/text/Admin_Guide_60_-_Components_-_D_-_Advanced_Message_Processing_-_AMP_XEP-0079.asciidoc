[[amp0079]]
Advanced Message Processing - AMP XEP-0079
==========================================
:author: Artur Hefczyc <artur.hefczyc@tigase.net>
:version: v2.0, June 2014: Reformatted for AsciiDoc.
:date: 2010-05-13 16:09
:revision: v2.1

:toc:
:numbered:
:website: http://tigase.net

Tigase server *5.1.0* or later offers support for link:http://xmpp.org/extensions/xep-0079.html[Advanced Message Processing], called AMP or XEP-0079.

It is enabled by default but there are several configuration options that you may tweak.

Configuration of AMP is not very complex, but as it is implemented as a component in the Tigase server it does needs a few settings to get it right.

Here is a first, brief overview of the AMP configuration and later  detailed explanation of each parameter.

[source,bash]
-------------------------------------
--sm-plugins=amp,-message,-msgoffline
--amp-repo-uri=jdbc:mysql://localhost/tigasedb?user=db_usr&password=db_pwd
--amp-security-level=STRICT
sess-man/plugins-conf/amp/amp-jid=amp@your-domain.tld
-------------------------------------

First of all: plugins:
----------------------

Even though the whole functionality is implemented inside the component you need a way to forward messages with +AMP+ payload to that component. This is what the 'amp' plugin does. The 'amp' plugin intercepts all +<message/>+ packets even without AMP payload, redirecting some of the to the +AMP+ component and others processing in a standard way. Therefore you no longer need 'message' plugin or 'msgoffline' plugin. Those are all functions are offered by the 'amp' plugin now. Hence you have to switch 'message' and 'msgoffline' plugins off (the 'amp' plugin is loaded by default):

[source,bash]
-------------------------------------
--sm-plugins=amp,-message,-msgoffline
-------------------------------------

The 'amp' plugin needs to know where to forward all the +AMP+ packets. By default plugin uses hostname of the given machine as this is true to the most installations. However, this is configured by the last line of the example configuration, which forwards all packets to the address 'amp@your-domain.tld':

[source,bash]
-------------------------------------
sess-man/plugins-conf/amp/amp-jid=amp@your-domain.tld
-------------------------------------

Secondly: component:
--------------------

By default Tigase loads the component with the standard name 'amp'

Optional parameters:
--------------------

There is also one parameter shared between the component and the plugin. Connection to the database where offline messages are stored. The AMP component has a dedicated schema for storing offline messages designed for a high traffic and high load installations. It does not use +UserRepository+ for storing messages.

By default the same physical database as for +UserRepository+ is used but you can change it and store messages in a completely separate location to reduce performance degradation of rest of the system. You can set a database connection string using following property:

[source,bash]
-------------------------------------
--amp-repo-uri=jdbc:mysql://localhost/tigasedb?user=db_usr&password=db_pwd
-------------------------------------

The link:http://xmpp.org/extensions/xep-0079.html[XEP-0079] specification has a link:http://xmpp.org/extensions/xep-0079.html#security[Section 9. - Security Considerations]. As it describes, in some cases the AMP protocol can be used to reveal user's presence information by other users who are not authorised for presence updates. There are a few possible ways to prevent this.

Tigase's implementation offers 3 modes to handle +AMP+ requests to prevent revealing user's status to non-authorized users:

[source,bash]
-------------------------------------
--amp-security-level=STRICT
-------------------------------------

In this mode the server performs strict checking. The +AMP+ specification is fully handled. This however involves roster loading for each offline user, hence it may impact the service performance. It may not be feasible or possible to run in this mode for services under a high load with lots of AMP messages.

In the XEP this mode is described in the following way:

_Accept the relevant condition only if the sender is authorized to receive the receiver's presence, as a result of which the server MUST reply with a <not-acceptable/> error condition if the sender is not so authorized; this is the RECOMMENDED behavior. This is also the default in Tigase._

[source,bash]
-------------------------------------
--amp-security-level=PERFORMANCE
-------------------------------------

Dummy checking is performed efficiently by just returning an error response every time there is a chance that the default action may reveal user status without looking into the user's roster. This does not affect performance but it does impact the +AMP+ compliance.

In the XEP this mode is described in the following way:

_Accept the relevant condition only if the action is "drop", as a result of which the server MUST reply with a <not-acceptable/> error condition if the action is "alert", "error", or "notify"; this is slightly less restrictive but still unnecessarily restricts the functionality of the system, so is NOT RECOMMENDED._

It does not do any checking. It acts like all users are authorized to receive notifications, even if it may reveal user status to unauthorized users. It does not impact the server performance and it offers full AMP compliance.

[source,bash]
-------------------------------------
--amp-security-level=NONE
-------------------------------------

[[offlineMessageLimits]]
Offline Message Limits
----------------------
Support for limiting number of stored offline messages on a per-user basis has now been added to Tigase as of v7.1.0.  By default, Tigase comes with a limit of stored offline messages which is set for every user. This limit by default is 100 offline messages for barejid-barejid pair. This value can be changed by the +store-limit+ property. To change to 200 messages on barejid-barejid paid, add the following entries to the init.properties file:
-----
sess-man/plugins-conf/amp/store-limit[L]=200
amp/store-limit[L]=200
-----

This setting applies to every user.

User Limit
~~~~~~~~~~
Each user is able to configure the number of offline messages which should be stored for him. To enable this feature, the following lines need to be entered into the init.properties file:
-----
sess-man/plugins-conf/amp/user-store-limit-enable[B]=true
amp/user-store-limit-enable[B]=true
-----

Values of user-specific limits will be stored in UserRepository under subnode of +offline-msgs+ and key +store-limit+. Data storage will be stored in +tig_pairs+ key with the value and a proper record from +tig_nodes+ points to this record.

Handling of Offline Messages Exceeding Limits
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
There are two possible ways to handle offline messages that exceed the limitations:
. +error+ sending message with error type back to sender.
. +drop+ drop of message without notifications to sender.

By default, Tigase sends a message back to the original sender with an error type of +service-unavailable+ with a proper description of error according to link:http://www.xmpp.org/extensions/xep-0160.html[XEP-0160].
However, it is possible to change this behavior to better suit your needs. This is done by adding the following line to your init.properties file.
-----
sess-man/plugins-conf/amp/quota-exceeded=drop
-----
This will force Tigase to drop packets that exceed the offline message limit.

Setting of Limits by User
~~~~~~~~~~~~~~~~~~~~~~~~~
Users wishing to set a custom limit of stored offline messages for barejid-barejid pairs needs to send the following XMPP stanza to the server:
[source,xml]
-----
<iq type="set" id="${random-id}">
  <msgoffline xmlns="msgoffline" limit="${limit}"/>
</iq>
-----
Where:
. ${random-id} is a random ID of the stanza (can be any string).
. ${limit} is the integer value of the offline message limit. This can be set to +false+ to disable offline message limits.

In response, the server will send back an +iq+ stanza with a result type:
[source,xml]
-----
<iq type="result" id="${random-id}">
  <msgoffline xmlns="msgoffline" limit="${limit}"/>
</iq>
-----

Example of Setting Limit of Stored Offline Messages to 10
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
XMPP client sends the following to the server:
[source,xml]
-----
<iq type="set" id="aabba">
  <msgoffline xmlns="msgoffline" limit="10"/>
</iq>
-----

Server response:
[source,xml]
-----
<iq type="result" id="aabba">
  <msgoffline xmlns="msgoffline" limit="10"/>
</iq>
-----

Example of Disabling Offline Message Limit
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
XMPP client sends the following to the server:
[source,xml]
-----
<iq type="set" id="aabbb">
  <msgoffline xmlns="msgoffline" limit="false"/>
</iq>
-----

Server response:
[source,xml]
-----
<iq type="result" id="aabbb">
  <msgoffline xmlns="msgoffline" limit="false"/>
</iq>
-----

[[offlineMessageReceipts]]
Message Receipts
----------------
Tigase AMP component has support for message receipts and storage.  By default, offline message delivery receipts will be sent to offline message storage.  Note this WILL count against the total number of stored offline messages as explored earlier.

Offline Storage
~~~~~~~~~~~~~~~
It is possible to set storage of message receipts, and add other types to save:
-----
sess-man/plugins-conf/amp/msg-store-offline-paths[s]=/message/received[urn:xmpp:receipts],/message/store-offline,-/message/do-not-store
-----
The above setting in the init.properties file will do three things:
- Messages with a <received> subelement of xmlns set to urn:xmpp:receipts will now be stored.
- Messages with <store-offline> subelement will be stored without checking for associated xmlns.
- Messages with <do-not-store> element *will not* be saved.

Any of these can be adjusted for your installation, remember that a '-' will stop storage of messages with the indicated property.
Messages will be checked by these matchers and if any of them result in a positive they will override default settings.
Matcher logic uses left to right ordering, in that matches on the first statement will ignore/override later listed matchers.

For example, if you wanted to store messages with <received> element, but not ones with <plain> element:
*THIS STATEMENT WILL NOT WORK*
-----
sess-man/plugins-conf/amp/msg-store-offline-paths[s]=/message/received,-/message/plain
-----

As it will just store all messages with <receieved> subelement.  The below statement will properly filter your results.

-----
sess-man/plugins-conf/amp/msg-store-offline-paths[s]=-/message/plain,/message/received
-----
