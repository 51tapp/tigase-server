[[licenseserver]]
= Licensing
:author: Daniel Wisnewski
:version: v1.0, March 2016
:date: 2016-03-15 11:00

:numbered:
:website: http://tigase.net
:toc:

From release of v7.1.0, users and commercial clients alike may now be able to register and request a license file from our servers on their own.
This process helps us maintain licenses, and can allow for client installations of new servers without the need to wait for a license file.
Users who do not wish to register will not be required to register.  However, If you are using Tigase ACS or other commercial pieces of software, you will be required to register.

*Again, Tigase XMPP Server will still be available free under AGPLv3, and free users will not need to register.*



== Registering for a License
There are currently 3 ways for registering for a license with Tigase commercial products.  The easiest and recommended method is using the built in automatic registration function.  However, you may also register via a web portal, and finally, and perhaps the most time-intensive is to use ad-hoc commands.

=== Automatic Registration

Once a commercial component is activated on Tigase XMPP Server, the program will then retrieve and/or generate an Installation ID from our servers, and make a file called installation-id in your _/etc_ directory including the installation ID for your instance.  Note that installation IDs cannot be moved from server to server and should remain individual to the machine and cluster they are running.


=== Web Portal

If you do not wish to use the automatic method, you may decide to generate a license using our web portal.
Offline installaions may obtain installation IDs from our web portal in a three-step process, generation, hashing, and obtaining.

==== Generating Installtion ID

For offline installations, you may obtain an installation ID from this address: link:https://license.tigase.net/register[https://license.tigase.net/register].

Data Fields:

- Customer name: Company or user name used to identify machines.  Multiple clusters or servers can have the same customer name.
- VHosts: Comma seperated list of Vhosts you will be using on this node.  NOTE: these fields are case sensetive!
- Legacy license hashes: Copy the contents of your acs.license file into this field to update your license from the old format into the new one.
- Capcha question: Enter the basic math answer for this form to prove you are not a robot.

The next page will provide you with an installation ID like the following:

+1TCICGG7K8AS2JSSEVMDA9QOLR4NVLJSR+

Create a blank file in the _/etc_ called installation-id and place the text in the file un modified.

==== Obtaining a License Hash

Once you have the installation ID, you will need to generate a license hash.  This can be done by accessing the admin UI page and navigating to the Licence section.  Once there, click on Retrieve code for licence.
Select the component you wish to generate a code for and click Submit.  You will see a fields with installation-id, module, vhosts filled out based on your server's configuation.  Copy the contents of the Code field and proceed to the next section.

==== Obtaining license file

Open a new browser and navigate to this address: link:https://license.tigase.net/retrieve[https://license.tigase.net/retrieve]  once there, paste the generated code from the last step in the field and click submit.  Once that happens, you will be prompted to download a license file, place this file in your _/etc_ folder and restart your server, your license is now activated and installed on your server.

=== AdHoc Commands
The new license server can now accept adHoc commands to be sent and received using XMPP stanzas.  This is more complicated, but it may help you use scripts or automate the server registration process:

These Ad-Hoc commands may be used to manually start the following operations:

==== +create-customer-id+
Creates a new customer-id.

Returns a blank form containing the following fields to be filled:
- +name+ - full name of the user
- +email+ - the email address user


[source,xml]
----
<iq type="set" to="licenceserver@localserver" id="aad3a">
    <command xmlns="http://jabber.org/protocol/commands" node="create-customer-id"/>
</iq>
----

The server sends in response:

Registration Form
[source,xml]
----
<iq from="licenceserver@localhost" type="result" id="aad3a" to="bob@localhost/Psi">
	<command xmlns="http://jabber.org/protocol/commands"
		status="executing" node="create-customer-id" sessionid="87ed39f9-d29c-405c-b1fa-a541958968aa">
        <x xmlns="jabber:x:data" type="form">
			<title>Customer Registration</title>
			<instructions>Please fill all fields</instructions>
			<field type="text-single" label="Name" var="name">
				<required/>
				<value/>
			</field>
			<field type="text-single" label="e-mail" var="email">
				<required/>
				<value/>
			</field>
        </x>
	</command>
</iq>
----

The user now sends the completed form:

Registration form response
[source,xml]
----
<iq type="set" to="licenceserver@localhost" id="aad4a">
	<command xmlns="http://jabber.org/protocol/commands" node="create-customer-id"
		sessionid="87ed39f9-d29c-405c-b1fa-a541958968aa">
		<x xmlns="jabber:x:data" type="submit">
			<field type="text-single" var="name">
				<value>Bob Bobowsky</value>
			</field>
			<field type="text-single" var="email">
				<value>bob@somewhere.gov</value>
			</field>
		</x>
	</command>
</iq>
----

After sending the filled form, a new +customer-id+ will be generated and sent to the E-mail listed in the form.
If you are already registered, it will be sent to the following address existing +customer-id+

==== +retrieve-license+

To obtain a license from the server must send a form containing a +customer-id+:

Start-up Command +retrieve-license+
[source,xml]
----
<iq type="set" to="licenceserver@localhost" id="aad8a">
	<command xmlns="http://jabber.org/protocol/commands" node="retrieve-licence"/>
</iq>
----

In response, the server will send a form asking for +customer-id+.
If the server's found his JabberID, it sent the form will automatically be filled in:

Asking for +customer-id+
[source,xml]
----
<iq from="licenceserver@localhost" type="result" id="aad8a" to="bob@localhost/Psi+">
	<command xmlns="http://jabber.org/protocol/commands" status="executing"
		node="retrieve-licence" sessionid="b7aa7ffb-5cda-4c67-aeb4-04094764ec9e">
		<x xmlns="jabber:x:data" type="form">
			<title>Retrieve licence</title>
			<instructions>Please fill all fields</instructions>
			<field type="text-single" label="customer-id" var="customer-id">
				<value></value>
			</field>
      <field type="jid-multi" var="vhosts">
       <value></value>
      </field>
      <field type="text-multi" var="legacy-hash">
       <value></value>
      </field>
      <field type="text-single" var="totp">
       <value></value>
      </field>
	</x>
	</command>
</iq>
----

The user sends the completed form:

Filled Form license generation
[source,xml]
----
<iq type="set" to="licenceserver@localhost" id="aae0a">
 <command xmlns="http://jabber.org/protocol/commands" node="retrieve-installation-id">
 <x xmlns="jabber:x:data" type="submit">
  <field type="text-single" var="customer">
   <value>Very Important Company</value>
  </field>
  <field type="jid-multi" var="vhosts">
   <value>im.company.com</value>
   <value>important.com</value>
  </field>
  <field type="text-multi" var="legacy-hash">
   <value>38a5dfa3ec07f08e8e1788d1d567359a7ed95b0e354953cf0222e0fea1872a7e</value>
  </field>
  <field type="text-single" var="totp">
   <value>4C70HD9F4JOM0UBB03OBR399B6PF6OSB</value>
  </field>
  </x>
 </command>
</iq>
----

The server sends a form containing the license.

NOTE: Warning! The license may be in plain-text or Base64 encoded!

.Generated license
[source,xml]
----
<iq from="licenceserver@localhost" type="result" id="aad9a" to="bob@localhost/Psi+">
	<command xmlns="http://jabber.org/protocol/commands" status="completed" node="retrieve-licence"
		sessionid="b7aa7ffb-5cda-4c67-aeb4-04094764ec9e">
		<x xmlns="jabber:x:data" type="result">
			<field type="text-multi" label="Licence" var="licence">
				<value>max-costam=9</value>
				<value>comment=Licencja całkowicie domyślna</value>
				<value>licence-nr=1</value>
				<value>licence-id=de54488e-13d0-38a4-8614-1b624cc73ac0</value>
				<value>customer-name=Bob Bobowsky</value>
				<value>customer-jid=bob@localhost</value>
				<value>template-id=fb9971738214b50c5700673956ade0fa0b8169d0</value>
				<value>valid-since=2015-07-17</value>
				<value>valid-until=2015-10-17</value>
				<value>signature=2bca48ad20b63dd76be08b1a6…374dab308</value>
			</field>
		</x>
	</command>
</iq>
----

== Statistics Sent
If you are using Tigase without a customer ID, you will be given a warning that statistics will be sent to Tigase.  Below is a breakdown of what is sent to the server.

NOTE: The text below has been better formatted for readability, but does not reflect the actual text being sent to Tigase.

[source,output]
-----
<statistics version="1">
	<domain>xmppserver</domain>
	<timestamp>2016-06-23T17:16:24.777-0700</timestamp>
	<vhosts>
    <item>vhost1.xmppserver.com</item>
  </vhosts>
	<uptime>308833</uptime>
	<heap>
    <used>30924376</used>
    <max>1426063360</max>
  </heap>
	<cluster>
    <nodes_count>1</nodes_count>
  </cluster>
	<users>
    <online>0</online>
    <active>0</active>
    <max_today>1</max_today>
    <max_yesterday>0</max_yesterday>
  </users>
	<additional_data>
		<components>
			<cmpInfo>
				<name>amp</name>
				<title>Tigase XMPP Server</title>
				<version>7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.cluster.AmpComponentClustered</class>
			</cmpInfo>

			<cmpInfo>
				<name>bosh</name>
				<title>Tigase XMPP Server</title>
				<version>7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.cluster.BoshConnectionClustered</class>
			</cmpInfo>

			<cmpInfo>
				<name>c2s</name>
				<title>Tigase XMPP Server</title>
				<version>7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.cluster.ClientConnectionClustered</class>
			</cmpInfo>

			<cmpInfo>
				<name>cl-comp</name>
				<title>Tigase XMPP Server</title>
				<version>7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.cluster.ClusterConnectionManager</class>
			</cmpInfo>

			<cmpInfo>
				<name>eventbus</name>
				<title>Tigase XMPP Server</title>
				<version>7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.disteventbus.component.EventBusComponent</class>
			</cmpInfo>

			<cmpInfo>
				<name>http</name>
				<title>Tigase HTTP API component: Tigase HTTP API component</title>
				<version>1.2.0-SNAPSHOT-b135/27310f9b-7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.http.HttpMessageReceiver</class>
			</cmpInfo>

			<cmpInfo>
				<name>monitor</name>
				<title>Tigase XMPP Server</title>
				<version>7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.monitor.MonitorComponent</class>
			</cmpInfo>

			<cmpInfo>
				<name>muc</name>
				<title>Tigase ACS - MUC Component</title>
				<version>1.2.0-SNAPSHOT-b62/74afbb91-2.4.0-SNAPSHOT-b425/d2e26014</version>
				<class>tigase.muc.cluster.MUCComponentClustered</class>
				<cmpData>
					<MUCClusteringStrategy>class tigase.muc.cluster.ShardingStrategy</MUCClusteringStrategy>
				</cmpData>
			</cmpInfo>

			<cmpInfo>
				<name>pubsub</name>
				<title>Tigase ACS - PubSub Component</title>
				<version>1.2.0-SNAPSHOT-b65/1c802a4c-3.2.0-SNAPSHOT-b524/892f867f</version>
				<class>tigase.pubsub.cluster.PubSubComponentClustered</class>
				<cmpData>
					<PubSubClusteringStrategy>class tigase.pubsub.cluster.PartitionedStrategy</PubSubClusteringStrategy>
				</cmpData>
			</cmpInfo>

			<cmpInfo>
				<name>s2s</name>
				<title>Tigase XMPP Server</title>
				<version>7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.server.xmppserver.S2SConnectionManager</class>
			</cmpInfo>

			<cmpInfo>
				<name>sess-man</name>
				<title>Tigase XMPP Server</title>
				<version>7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.cluster.SessionManagerClustered</class>
				<cmpData>
					<ClusteringStrategy>class tigase.server.cluster.strategy.OnlineUsersCachingStrategy</ClusteringStrategy>
				</cmpData>
			</cmpInfo>

			<cmpInfo>
				<name>ws2s</name>
				<title>Tigase XMPP Server</title>
				<version>7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.cluster.WebSocketClientConnectionClustered</class>
			</cmpInfo>

			<cmpInfo>
				<name>vhost-man</name>
				<title>Tigase XMPP Server</title>
				<version>7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.vhosts.VHostManager</class>
			</cmpInfo>

			<cmpInfo>
				<name>stats</name>
				<title>Tigase XMPP Server</title>
				<version>7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.stats.StatisticsCollector</class>
			</cmpInfo>

			<cmpInfo>
				<name>cluster-contr</name>
				<title>Tigase XMPP Server</title>
				<version>7.1.0-SNAPSHOT-b4226/5e7210f6 (2016-06-01/23:15:52)</version>
				<class>tigase.cluster.ClusterController</class>
			</cmpInfo>
		</components>

		<unlicencedComponenents>
			<ComponentAdditionalInfo name=&quot;acs&quot;/>
		</unlicencedComponenents>
	</additional_data>
</statistics>
-----
